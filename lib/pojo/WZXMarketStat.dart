///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class WZXMarketStatAssets {
/*
{
  "type": "1inch",
  "name": "1inch",
  "deposit": "enabled",
  "withdrawal": "enabled",
  "listingType": "default",
  "category": "crypto",
  "withdrawFee": 3.82,
  "minWithdrawAmount": 7.64,
  "maxWithdrawAmount": 764.82,
  "minDepositAmount": 0,
  "confirmations": 30
}
*/

  String? type;
  String? name;
  String? deposit;
  String? withdrawal;
  String? listingType;
  String? category;
  double? withdrawFee;
  double? minWithdrawAmount;
  double? maxWithdrawAmount;
  int? minDepositAmount;
  int? confirmations;

  WZXMarketStatAssets({
    this.type,
    this.name,
    this.deposit,
    this.withdrawal,
    this.listingType,
    this.category,
    this.withdrawFee,
    this.minWithdrawAmount,
    this.maxWithdrawAmount,
    this.minDepositAmount,
    this.confirmations,
  });
  WZXMarketStatAssets.fromJson(Map<String, dynamic> json) {
    type = json["type"]?.toString();
    name = json["name"]?.toString();
    deposit = json["deposit"]?.toString();
    withdrawal = json["withdrawal"]?.toString();
    listingType = json["listingType"]?.toString();
    category = json["category"]?.toString();
    withdrawFee = double.tryParse(json["withdrawFee"]?.toString() ?? '');
    minWithdrawAmount = double.tryParse(json["minWithdrawAmount"]?.toString() ?? '');
    maxWithdrawAmount = double.tryParse(json["maxWithdrawAmount"]?.toString() ?? '');
    minDepositAmount = int.tryParse(json["minDepositAmount"]?.toString() ?? '');
    confirmations = int.tryParse(json["confirmations"]?.toString() ?? '');
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["type"] = type;
    data["name"] = name;
    data["deposit"] = deposit;
    data["withdrawal"] = withdrawal;
    data["listingType"] = listingType;
    data["category"] = category;
    data["withdrawFee"] = withdrawFee;
    data["minWithdrawAmount"] = minWithdrawAmount;
    data["maxWithdrawAmount"] = maxWithdrawAmount;
    data["minDepositAmount"] = minDepositAmount;
    data["confirmations"] = confirmations;
    return data;
  }
}

class WZXMarketStatMarketsFeeAsk {
/*
{
  "maker": 0.002,
  "taker": 0.002
}
*/

  double? maker;
  double? taker;

  WZXMarketStatMarketsFeeAsk({
    this.maker,
    this.taker,
  });
  WZXMarketStatMarketsFeeAsk.fromJson(Map<String, dynamic> json) {
    maker = double.tryParse(json["maker"]?.toString() ?? '');
    taker = double.tryParse(json["taker"]?.toString() ?? '');
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["maker"] = maker;
    data["taker"] = taker;
    return data;
  }
}

class WZXMarketStatMarketsFeeBid {
/*
{
  "maker": 0.002,
  "taker": 0.002
}
*/

  double? maker;
  double? taker;

  WZXMarketStatMarketsFeeBid({
    this.maker,
    this.taker,
  });
  WZXMarketStatMarketsFeeBid.fromJson(Map<String, dynamic> json) {
    maker = double.tryParse(json["maker"]?.toString() ?? '');
    taker = double.tryParse(json["taker"]?.toString() ?? '');
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["maker"] = maker;
    data["taker"] = taker;
    return data;
  }
}

class WZXMarketStatMarketsFee {
/*
{
  "bid": {
    "maker": 0.002,
    "taker": 0.002
  },
  "ask": {
    "maker": 0.002,
    "taker": 0.002
  }
}
*/

  WZXMarketStatMarketsFeeBid? bid;
  WZXMarketStatMarketsFeeAsk? ask;

  WZXMarketStatMarketsFee({
    this.bid,
    this.ask,
  });
  WZXMarketStatMarketsFee.fromJson(Map<String, dynamic> json) {
    bid = (json["bid"] != null && (json["bid"] is Map)) ? WZXMarketStatMarketsFeeBid.fromJson(json["bid"]) : null;
    ask = (json["ask"] != null && (json["ask"] is Map)) ? WZXMarketStatMarketsFeeAsk.fromJson(json["ask"]) : null;
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (bid != null) {
      data["bid"] = bid!.toJson();
    }
    if (ask != null) {
      data["ask"] = ask!.toJson();
    }
    return data;
  }
}

class WZXMarketStatMarkets {
/*
{
  "baseMarket": "xrp",
  "quoteMarket": "btc",
  "minBuyAmount": 0.0001,
  "minSellAmount": 0.0001,
  "basePrecision": 1,
  "quotePrecision": 8,
  "status": "active",
  "fee": {
    "bid": {
      "maker": 0.002,
      "taker": 0.002
    },
    "ask": {
      "maker": 0.002,
      "taker": 0.002
    }
  },
  "low": "0.0000175",
  "high": "0.00001819",
  "last": "0.00001785",
  "type": "SPOT",
  "open": 0.00001819,
  "volume": "8640.5",
  "sell": "0.000018",
  "buy": "0.00001789",
  "at": 1627588642
}
*/

  String? baseMarket;
  String? quoteMarket;
  double? minBuyAmount;
  double? minSellAmount;
  int? basePrecision;
  int? quotePrecision;
  String? status;
  WZXMarketStatMarketsFee? fee;
  String? low;
  String? high;
  String? last;
  String? type;
  double? open;
  String? volume;
  String? sell;
  String? buy;
  int? at;

  WZXMarketStatMarkets({
    this.baseMarket,
    this.quoteMarket,
    this.minBuyAmount,
    this.minSellAmount,
    this.basePrecision,
    this.quotePrecision,
    this.status,
    this.fee,
    this.low,
    this.high,
    this.last,
    this.type,
    this.open,
    this.volume,
    this.sell,
    this.buy,
    this.at,
  });
  WZXMarketStatMarkets.fromJson(Map<String, dynamic> json) {
    baseMarket = json["baseMarket"]?.toString();
    quoteMarket = json["quoteMarket"]?.toString();
    minBuyAmount = double.tryParse(json["minBuyAmount"]?.toString() ?? '');
    minSellAmount = double.tryParse(json["minSellAmount"]?.toString() ?? '');
    basePrecision = int.tryParse(json["basePrecision"]?.toString() ?? '');
    quotePrecision = int.tryParse(json["quotePrecision"]?.toString() ?? '');
    status = json["status"]?.toString();
    fee = (json["fee"] != null && (json["fee"] is Map)) ? WZXMarketStatMarketsFee.fromJson(json["fee"]) : null;
    low = json["low"]?.toString();
    high = json["high"]?.toString();
    last = json["last"]?.toString();
    type = json["type"]?.toString();
    open = double.tryParse(json["open"]?.toString() ?? '');
    volume = json["volume"]?.toString();
    sell = json["sell"]?.toString();
    buy = json["buy"]?.toString();
    at = int.tryParse(json["at"]?.toString() ?? '');
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["baseMarket"] = baseMarket;
    data["quoteMarket"] = quoteMarket;
    data["minBuyAmount"] = minBuyAmount;
    data["minSellAmount"] = minSellAmount;
    data["basePrecision"] = basePrecision;
    data["quotePrecision"] = quotePrecision;
    data["status"] = status;
    if (fee != null) {
      data["fee"] = fee!.toJson();
    }
    data["low"] = low;
    data["high"] = high;
    data["last"] = last;
    data["type"] = type;
    data["open"] = open;
    data["volume"] = volume;
    data["sell"] = sell;
    data["buy"] = buy;
    data["at"] = at;
    return data;
  }
}

class WZXMarketStat {
/*
{
  "markets": [
    {
      "baseMarket": "xrp",
      "quoteMarket": "btc",
      "minBuyAmount": 0.0001,
      "minSellAmount": 0.0001,
      "basePrecision": 1,
      "quotePrecision": 8,
      "status": "active",
      "fee": {
        "bid": {
          "maker": 0.002,
          "taker": 0.002
        },
        "ask": {
          "maker": 0.002,
          "taker": 0.002
        }
      },
      "low": "0.0000175",
      "high": "0.00001819",
      "last": "0.00001785",
      "type": "SPOT",
      "open": 0.00001819,
      "volume": "8640.5",
      "sell": "0.000018",
      "buy": "0.00001789",
      "at": 1627588642
    }
  ],
  "assets": [
    {
      "type": "1inch",
      "name": "1inch",
      "deposit": "enabled",
      "withdrawal": "enabled",
      "listingType": "default",
      "category": "crypto",
      "withdrawFee": 3.82,
      "minWithdrawAmount": 7.64,
      "maxWithdrawAmount": 764.82,
      "minDepositAmount": 0,
      "confirmations": 30
    }
  ]
}
*/

  List<WZXMarketStatMarkets?>? markets;
  List<WZXMarketStatAssets?>? assets;

  WZXMarketStat({
    this.markets,
    this.assets,
  });
  WZXMarketStat.fromJson(Map<String, dynamic> json) {
  if (json["markets"] != null && (json["markets"] is List)) {
  final v = json["markets"];
  final arr0 = <WZXMarketStatMarkets>[];
  v.forEach((v) {
  arr0.add(WZXMarketStatMarkets.fromJson(v));
  });
    markets = arr0;
    }
  if (json["assets"] != null && (json["assets"] is List)) {
  final v = json["assets"];
  final arr0 = <WZXMarketStatAssets>[];
  v.forEach((v) {
  arr0.add(WZXMarketStatAssets.fromJson(v));
  });
    assets = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (markets != null) {
      final v = markets;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v!.toJson());
  });
      data["markets"] = arr0;
    }
    if (assets != null) {
      final v = assets;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v!.toJson());
  });
      data["assets"] = arr0;
    }
    return data;
  }
}
